version: "3.9"
services:
  db:
    container_name: database_container
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - DB_HOST=${DB_HOST}
    expose:
      - 5432
    networks:
      - internal
    labels:
      - traefik.enable=false
    ports:
      - "${DB_PORT}:5432"
  backend:
    container_name: fastapi_container
    build:
      context: ./backend
      dockerfile: prod.DockerFile
    command: bash -c "poetry run alembic upgrade head && poetry run main"
    env_file:
      - .env
    networks:
      - web
      - internal
    expose:
      - 8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
    depends_on:
      - db
      - traefik
  frontend:
    container_name: angular_container
    build:
      context: ./frontend
      dockerfile: prod.DockerFile
    expose:
      - 4200
      - 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.front.tls=true"
      - "traefik.http.routers.front.tls.certresolver=letsencrypt"
    networks:
      - web
    depends_on:
      - backend
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    expose:
      - 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.db.rule=Host(`pgadmin.${DOMAIN}`)"
      - "traefik.http.routers.db.tls=true"
      - "traefik.http.routers.db.tls.certresolver=letsencrypt"
    networks:
      - internal
      - web
    depends_on:
      - db
      - traefik
  traefik:
    image: traefik
    container_name: traefik_container
    domainname: ${DOMAIN}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik.prod.toml:/etc/traefik/traefik.toml"
    networks:
      - web


networks:
  web:
    external: true
  internal:
    external: false