version: "3.9"
services:
  db:
    container_name: database_container
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - DB_HOST=${DB_HOST}
    expose:
      - 5432
    ports:
      - "${DB_PORT}:5432"
  backend:
    container_name: fastapi_container
    build:
      context: ./backend
      dockerfile: prod.DockerFile
    command: bash -c "poetry run alembic upgrade head && poetry run main"
    env_file:
      - .env
    expose:
      - 8000
    labels:
      - "traefik.enable=true"
      - "traefik.backend=pma"
      - "traefik.frontend.rule=Host:api.${DOMAIN}"
      - "traefik.docker.network=t1_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.customFrameOptionsValue: allow-from https:${DOMAIN}"
    depends_on:
      - db
      - traefik
  frontend:
    container_name: angular_container
    networks:
      - t1_proxy
    build:
      context: ./frontend
      dockerfile: prod.DockerFile
    labels:
      - "traefik.enable=true"
      - "traefik.backend=frontend"
      - "traefik.frontend.rule=Host:${DOMAIN}"
      - "traefik.docker.network=t1_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.customFrameOptionsValue: allow-from https:${DOMAIN}"
    depends_on:
      - backend
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    networks:
      - t1_proxy
      - default
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=pma"
      - "traefik.frontend.rule=Host:pgadmin.${DOMAIN}"
      - "traefik.docker.network=t1_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.customFrameOptionsValue: allow-from https:${DOMAIN}"
    depends_on:
      - db
      - traefik
  traefik:
    image: traefik
    container_name: traefik_container
    networks:
      - default
      - t1_proxy
    domainname: ${DOMAIN}
    ports:
      - "80:80"
      - "443:443"
      - "${TRAEFIK_PORT}:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:traefik.${DOMAIN}"
      - "traefik.docker.network=t1_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.customFrameOptionsValue: allow-from https:${DOMAIN}"
      - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"
    volumes:
      - "./traefik.dev.toml:/etc/traefik/traefik.toml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

networks:
  t1_proxy:
    external:
      name: t1_proxy
  default:
    driver: bridge